package View.Home;

import Controller.ActivityLoggerController;
import Controller.FileController;
import Models.ActivityLogger;
import Models.FileModel;
import View.Resources.CustomFont;
import java.awt.Color;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.UUID;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.SwingUtilities;

/**
 *
 * @author benjamin
 */
public class FileUploadWindow extends javax.swing.JFrame implements UIMethods {
    
    private String newFileId;
    private List<Path> newFiles;
    private List<FileModel>fileObjs;
    SimpleDateFormat formatter;
    
    public FileUploadWindow() {
        initComponents();
        loadFonts();
        loadIcons();
        formatter = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss"); 
        newFiles = new ArrayList<>();
        fileObjs = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        roundPanel4 = new View.Resources.RoundPanel();
        roundPanel5 = new View.Resources.RoundPanel();
        roundPanel6 = new View.Resources.RoundPanel();
        panelHeading = new javax.swing.JLabel();
        roundPanel7 = new View.Resources.RoundPanel();
        unsupportedMessageLabel = new javax.swing.JLabel();
        roundPanel8 = new View.Resources.RoundPanel();
        jPanel8 = new javax.swing.JPanel();
        uploadPanel = new View.Resources.RoundPanel();
        chooseFileLabel = new javax.swing.JLabel();
        roundPanel3 = new View.Resources.RoundPanel();
        roundPanel9 = new View.Resources.RoundPanel();
        roundPanel10 = new View.Resources.RoundPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        roundPanel11 = new View.Resources.RoundPanel();
        fileNameLabel = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        roundPanel12 = new View.Resources.RoundPanel();
        jPanel45 = new javax.swing.JPanel();
        jPanel46 = new javax.swing.JPanel();
        roundPanel14 = new View.Resources.RoundPanel();
        jPanel47 = new javax.swing.JPanel();
        roundPanel15 = new View.Resources.RoundPanel();
        cancelBTN = new View.Resources.RoundPanel();
        cancelLabel = new javax.swing.JLabel();
        jPanel40 = new javax.swing.JPanel();
        jPanel41 = new javax.swing.JPanel();
        jPanel44 = new javax.swing.JPanel();
        uploadBTN = new View.Resources.RoundPanel();
        uploadLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(523, 650));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(240, 240, 240));
        jPanel1.setPreferredSize(new java.awt.Dimension(529, 15));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 523, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 15, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setBackground(new java.awt.Color(240, 240, 240));
        jPanel2.setPreferredSize(new java.awt.Dimension(529, 15));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 523, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 15, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        jPanel3.setBackground(new java.awt.Color(240, 240, 240));
        jPanel3.setPreferredSize(new java.awt.Dimension(15, 545));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 15, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 597, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel3, java.awt.BorderLayout.LINE_END);

        jPanel4.setBackground(new java.awt.Color(240, 240, 240));
        jPanel4.setPreferredSize(new java.awt.Dimension(15, 545));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 15, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 597, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel4, java.awt.BorderLayout.LINE_START);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel6.setBackground(new java.awt.Color(240, 240, 240));
        jPanel6.setLayout(new java.awt.BorderLayout());

        jPanel9.setBackground(new java.awt.Color(240, 240, 240));
        jPanel9.setPreferredSize(new java.awt.Dimension(499, 400));
        jPanel9.setLayout(new java.awt.BorderLayout());

        roundPanel4.setBackground(new java.awt.Color(255, 255, 255));
        roundPanel4.setPreferredSize(new java.awt.Dimension(499, 450));
        roundPanel4.setRoundBottomLeft(10);
        roundPanel4.setRoundBottomRight(10);
        roundPanel4.setRoundTopLeft(10);
        roundPanel4.setRoundTopRight(10);
        roundPanel4.setLayout(new java.awt.BorderLayout());

        roundPanel5.setBackground(new java.awt.Color(255, 255, 255));
        roundPanel5.setPreferredSize(new java.awt.Dimension(499, 350));
        roundPanel5.setRoundTopLeft(10);
        roundPanel5.setRoundTopRight(10);
        roundPanel5.setLayout(new java.awt.BorderLayout());

        roundPanel6.setBackground(new java.awt.Color(255, 255, 255));
        roundPanel6.setPreferredSize(new java.awt.Dimension(499, 60));
        roundPanel6.setRoundTopLeft(10);
        roundPanel6.setRoundTopRight(10);

        panelHeading.setFont(new java.awt.Font("Liberation Sans", 1, 20)); // NOI18N
        panelHeading.setText("Upload File");

        javax.swing.GroupLayout roundPanel6Layout = new javax.swing.GroupLayout(roundPanel6);
        roundPanel6.setLayout(roundPanel6Layout);
        roundPanel6Layout.setHorizontalGroup(
            roundPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel6Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(panelHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(141, Short.MAX_VALUE))
        );
        roundPanel6Layout.setVerticalGroup(
            roundPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(panelHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        roundPanel5.add(roundPanel6, java.awt.BorderLayout.PAGE_START);

        roundPanel7.setBackground(new java.awt.Color(255, 255, 255));
        roundPanel7.setPreferredSize(new java.awt.Dimension(499, 40));
        roundPanel7.setRoundBottomLeft(10);
        roundPanel7.setRoundBottomRight(10);

        unsupportedMessageLabel.setFont(new java.awt.Font("Liberation Sans", 1, 13)); // NOI18N
        unsupportedMessageLabel.setForeground(new java.awt.Color(50, 50, 50));
        unsupportedMessageLabel.setText("Unsupported formats: .exe, .sh, .bat");

        javax.swing.GroupLayout roundPanel7Layout = new javax.swing.GroupLayout(roundPanel7);
        roundPanel7.setLayout(roundPanel7Layout);
        roundPanel7Layout.setHorizontalGroup(
            roundPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel7Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(unsupportedMessageLabel)
                .addContainerGap(243, Short.MAX_VALUE))
        );
        roundPanel7Layout.setVerticalGroup(
            roundPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel7Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(unsupportedMessageLabel)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        roundPanel5.add(roundPanel7, java.awt.BorderLayout.PAGE_END);

        roundPanel8.setBackground(new java.awt.Color(255, 255, 255));
        roundPanel8.setPreferredSize(new java.awt.Dimension(20, 260));

        javax.swing.GroupLayout roundPanel8Layout = new javax.swing.GroupLayout(roundPanel8);
        roundPanel8.setLayout(roundPanel8Layout);
        roundPanel8Layout.setHorizontalGroup(
            roundPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        roundPanel8Layout.setVerticalGroup(
            roundPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        roundPanel5.add(roundPanel8, java.awt.BorderLayout.LINE_START);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setPreferredSize(new java.awt.Dimension(20, 260));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        roundPanel5.add(jPanel8, java.awt.BorderLayout.LINE_END);

        uploadPanel.setBackground(new java.awt.Color(214, 239, 216));
        uploadPanel.setRoundBottomLeft(10);
        uploadPanel.setRoundBottomRight(10);
        uploadPanel.setRoundTopLeft(10);
        uploadPanel.setRoundTopRight(10);
        uploadPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                uploadPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                uploadPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                uploadPanelMouseExited(evt);
            }
        });
        uploadPanel.setLayout(new java.awt.BorderLayout());

        chooseFileLabel.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        chooseFileLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        chooseFileLabel.setText("Choose file");
        chooseFileLabel.setIconTextGap(12);
        uploadPanel.add(chooseFileLabel, java.awt.BorderLayout.CENTER);

        roundPanel5.add(uploadPanel, java.awt.BorderLayout.CENTER);

        roundPanel4.add(roundPanel5, java.awt.BorderLayout.PAGE_START);

        roundPanel3.setBackground(new java.awt.Color(255, 255, 255));
        roundPanel3.setPreferredSize(new java.awt.Dimension(499, 100));
        roundPanel3.setRoundBottomLeft(10);
        roundPanel3.setRoundBottomRight(10);
        roundPanel3.setLayout(new java.awt.BorderLayout());

        roundPanel9.setBackground(new java.awt.Color(255, 255, 255));
        roundPanel9.setPreferredSize(new java.awt.Dimension(499, 0));
        roundPanel9.setRoundBottomRight(10);
        roundPanel9.setRoundTopLeft(10);

        javax.swing.GroupLayout roundPanel9Layout = new javax.swing.GroupLayout(roundPanel9);
        roundPanel9.setLayout(roundPanel9Layout);
        roundPanel9Layout.setHorizontalGroup(
            roundPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 493, Short.MAX_VALUE)
        );
        roundPanel9Layout.setVerticalGroup(
            roundPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        roundPanel3.add(roundPanel9, java.awt.BorderLayout.PAGE_START);

        roundPanel10.setBackground(new java.awt.Color(255, 255, 255));
        roundPanel10.setPreferredSize(new java.awt.Dimension(499, 20));
        roundPanel10.setRoundBottomLeft(10);
        roundPanel10.setRoundBottomRight(10);

        javax.swing.GroupLayout roundPanel10Layout = new javax.swing.GroupLayout(roundPanel10);
        roundPanel10.setLayout(roundPanel10Layout);
        roundPanel10Layout.setHorizontalGroup(
            roundPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 493, Short.MAX_VALUE)
        );
        roundPanel10Layout.setVerticalGroup(
            roundPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        roundPanel3.add(roundPanel10, java.awt.BorderLayout.PAGE_END);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setPreferredSize(new java.awt.Dimension(20, 20));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
        );

        roundPanel3.add(jPanel7, java.awt.BorderLayout.LINE_START);

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setPreferredSize(new java.awt.Dimension(20, 20));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
        );

        roundPanel3.add(jPanel10, java.awt.BorderLayout.LINE_END);

        roundPanel11.setBackground(new java.awt.Color(250, 250, 250));
        roundPanel11.setRoundBottomLeft(10);
        roundPanel11.setRoundBottomRight(10);
        roundPanel11.setRoundTopLeft(10);
        roundPanel11.setRoundTopRight(10);

        fileNameLabel.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        fileNameLabel.setIconTextGap(8);

        javax.swing.GroupLayout roundPanel11Layout = new javax.swing.GroupLayout(roundPanel11);
        roundPanel11.setLayout(roundPanel11Layout);
        roundPanel11Layout.setHorizontalGroup(
            roundPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel11Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(fileNameLabel)
                .addContainerGap(433, Short.MAX_VALUE))
        );
        roundPanel11Layout.setVerticalGroup(
            roundPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel11Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(fileNameLabel)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        roundPanel3.add(roundPanel11, java.awt.BorderLayout.CENTER);

        roundPanel4.add(roundPanel3, java.awt.BorderLayout.CENTER);

        jPanel9.add(roundPanel4, java.awt.BorderLayout.PAGE_START);

        jPanel11.setLayout(new java.awt.BorderLayout());

        jPanel12.setBackground(new java.awt.Color(240, 240, 240));
        jPanel12.setPreferredSize(new java.awt.Dimension(499, 20));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 493, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jPanel11.add(jPanel12, java.awt.BorderLayout.PAGE_START);

        jPanel13.setBackground(new java.awt.Color(240, 240, 240));
        jPanel13.setLayout(new java.awt.BorderLayout());

        roundPanel12.setBackground(new java.awt.Color(255, 255, 255));
        roundPanel12.setRoundBottomLeft(10);
        roundPanel12.setRoundBottomRight(10);
        roundPanel12.setRoundTopLeft(10);
        roundPanel12.setRoundTopRight(10);

        jPanel45.setBackground(new java.awt.Color(255, 255, 255));
        jPanel45.setPreferredSize(new java.awt.Dimension(300, 100));
        jPanel45.setLayout(new java.awt.BorderLayout());

        jPanel46.setBackground(new java.awt.Color(240, 240, 240));
        jPanel46.setPreferredSize(new java.awt.Dimension(300, 30));
        jPanel46.setVerifyInputWhenFocusTarget(false);
        jPanel46.setLayout(new java.awt.BorderLayout());

        roundPanel14.setBackground(new java.awt.Color(255, 255, 255));
        roundPanel14.setRoundBottomLeft(10);
        roundPanel14.setRoundBottomRight(10);
        roundPanel14.setRoundTopLeft(10);
        roundPanel14.setRoundTopRight(10);

        javax.swing.GroupLayout roundPanel14Layout = new javax.swing.GroupLayout(roundPanel14);
        roundPanel14.setLayout(roundPanel14Layout);
        roundPanel14Layout.setHorizontalGroup(
            roundPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 481, Short.MAX_VALUE)
        );
        roundPanel14Layout.setVerticalGroup(
            roundPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jPanel46.add(roundPanel14, java.awt.BorderLayout.CENTER);

        jPanel45.add(jPanel46, java.awt.BorderLayout.PAGE_END);

        jPanel47.setBackground(new java.awt.Color(240, 240, 240));
        jPanel47.setPreferredSize(new java.awt.Dimension(300, 25));
        jPanel47.setVerifyInputWhenFocusTarget(false);
        jPanel47.setLayout(new java.awt.BorderLayout());

        roundPanel15.setBackground(new java.awt.Color(255, 255, 255));
        roundPanel15.setRoundTopLeft(10);

        javax.swing.GroupLayout roundPanel15Layout = new javax.swing.GroupLayout(roundPanel15);
        roundPanel15.setLayout(roundPanel15Layout);
        roundPanel15Layout.setHorizontalGroup(
            roundPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 481, Short.MAX_VALUE)
        );
        roundPanel15Layout.setVerticalGroup(
            roundPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        jPanel47.add(roundPanel15, java.awt.BorderLayout.CENTER);

        jPanel45.add(jPanel47, java.awt.BorderLayout.NORTH);

        cancelBTN.setBackground(new java.awt.Color(204, 0, 0));
        cancelBTN.setPreferredSize(new java.awt.Dimension(140, 45));
        cancelBTN.setRoundBottomLeft(30);
        cancelBTN.setRoundBottomRight(30);
        cancelBTN.setRoundTopLeft(30);
        cancelBTN.setRoundTopRight(30);
        cancelBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelBTNMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cancelBTNMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cancelBTNMouseExited(evt);
            }
        });
        cancelBTN.setLayout(new java.awt.BorderLayout());

        cancelLabel.setFont(new java.awt.Font("Liberation Sans", 1, 16)); // NOI18N
        cancelLabel.setForeground(new java.awt.Color(255, 204, 204));
        cancelLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cancelLabel.setText("Cancel");
        cancelBTN.add(cancelLabel, java.awt.BorderLayout.CENTER);

        jPanel45.add(cancelBTN, java.awt.BorderLayout.LINE_END);

        jPanel40.setBackground(new java.awt.Color(255, 255, 255));
        jPanel40.setLayout(new java.awt.BorderLayout());

        jPanel41.setBackground(new java.awt.Color(255, 255, 255));
        jPanel41.setPreferredSize(new java.awt.Dimension(25, 45));

        javax.swing.GroupLayout jPanel41Layout = new javax.swing.GroupLayout(jPanel41);
        jPanel41.setLayout(jPanel41Layout);
        jPanel41Layout.setHorizontalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );
        jPanel41Layout.setVerticalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 45, Short.MAX_VALUE)
        );

        jPanel40.add(jPanel41, java.awt.BorderLayout.LINE_END);

        jPanel44.setBackground(new java.awt.Color(255, 255, 255));
        jPanel44.setLayout(new java.awt.BorderLayout());

        uploadBTN.setBackground(new java.awt.Color(34, 151, 153));
        uploadBTN.setPreferredSize(new java.awt.Dimension(140, 45));
        uploadBTN.setRoundBottomLeft(28);
        uploadBTN.setRoundBottomRight(28);
        uploadBTN.setRoundTopLeft(28);
        uploadBTN.setRoundTopRight(28);
        uploadBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                uploadBTNMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                uploadBTNMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                uploadBTNMouseExited(evt);
            }
        });
        uploadBTN.setLayout(new java.awt.BorderLayout());

        uploadLabel.setBackground(new java.awt.Color(255, 255, 255));
        uploadLabel.setFont(new java.awt.Font("Liberation Sans", 1, 16)); // NOI18N
        uploadLabel.setForeground(new java.awt.Color(255, 255, 255));
        uploadLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        uploadLabel.setText("Upload");
        uploadBTN.add(uploadLabel, java.awt.BorderLayout.CENTER);

        jPanel44.add(uploadBTN, java.awt.BorderLayout.LINE_END);

        jPanel40.add(jPanel44, java.awt.BorderLayout.CENTER);

        jPanel45.add(jPanel40, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout roundPanel12Layout = new javax.swing.GroupLayout(roundPanel12);
        roundPanel12.setLayout(roundPanel12Layout);
        roundPanel12Layout.setHorizontalGroup(
            roundPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 493, Short.MAX_VALUE)
            .addGroup(roundPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(roundPanel12Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel45, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 12, Short.MAX_VALUE)))
        );
        roundPanel12Layout.setVerticalGroup(
            roundPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
            .addGroup(roundPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(roundPanel12Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel13.add(roundPanel12, java.awt.BorderLayout.PAGE_START);

        jPanel11.add(jPanel13, java.awt.BorderLayout.CENTER);

        jPanel9.add(jPanel11, java.awt.BorderLayout.CENTER);

        jPanel6.add(jPanel9, java.awt.BorderLayout.CENTER);

        jPanel5.add(jPanel6, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel5, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBTNMouseClicked
        int response = JOptionPane.showConfirmDialog(null, setJOptionMessageLabel("Do want to exit?"), "Warning!", JOptionPane.OK_CANCEL_OPTION);
        if(response == 0) {
            this.dispose();
        }
    }//GEN-LAST:event_cancelBTNMouseClicked

    private void cancelBTNMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBTNMouseEntered
        changeFontColor(cancelLabel, new Color(102,51,0));
        changeColor(cancelBTN, new Color(255,102,102));
    }//GEN-LAST:event_cancelBTNMouseEntered

    private void cancelBTNMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBTNMouseExited
        changeFontColor(cancelLabel, new Color(255,102,102));
        changeColor(cancelBTN, new Color(190, 49, 68));
    }//GEN-LAST:event_cancelBTNMouseExited

    private void uploadBTNMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadBTNMouseEntered
        changeColor(uploadBTN, new Color(72, 207, 203));
    }//GEN-LAST:event_uploadBTNMouseEntered

    private void uploadBTNMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadBTNMouseExited
        changeColor(uploadBTN, new Color(34, 151, 153));
    }//GEN-LAST:event_uploadBTNMouseExited

    private void uploadPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadPanelMouseExited
        changeColor(uploadPanel, new Color(214,239,216));
    }//GEN-LAST:event_uploadPanelMouseExited

    private void uploadPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadPanelMouseEntered
        changeColor(uploadPanel, new Color(152, 222, 217));
    }//GEN-LAST:event_uploadPanelMouseEntered

    private void uploadPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadPanelMouseClicked
        JFileChooser fileChooser = new JFileChooser();
        
        fileChooser.setDialogTitle("Select a file");
        
        int userResponse = fileChooser.showOpenDialog(null);
        
        if (userResponse == JFileChooser.APPROVE_OPTION) {
            Path selectedFilePath = fileChooser.getSelectedFile().toPath();
            //check if the selected file is a supported file (Unsupported: .exe, .sh, .bat)
            if(checkFileExtension(getFileExtension(selectedFilePath))) {
                newFiles.add(selectedFilePath);
            } else {
                JOptionPane.showMessageDialog(null, setJOptionMessageLabel("Unsupported file extension detected!"), "Failed!", JOptionPane.ERROR_MESSAGE);
                ActivityLoggerController.logActivity(
                        new ActivityLogger(Home.user.getUsername(), null, "Unsupported file upload attempt", new Date().toString()));
            }
            String fileNames = null;
            
            for(Path newFile : newFiles) {
                if(fileNames != null) {
                    fileNames += ", " + newFile.getFileName().toString();
                    fileNameLabel.setText(fileNames);
                }else {
                    fileNames = newFile.getFileName().toString();
                    fileNameLabel.setText(fileNames);
                }
            }
            
        }
    }//GEN-LAST:event_uploadPanelMouseClicked

    private void uploadBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadBTNMouseClicked
        if(!newFiles.isEmpty()) {
            triggerProgressIndicator(getAllFileSize());
            if(FileController.uploadFiles(createFileObjs())) {
                JOptionPane.showMessageDialog(null, setJOptionMessageLabel("File upload success!"), "Success", JOptionPane.INFORMATION_MESSAGE);
            }else {
                JOptionPane.showMessageDialog(null, setJOptionMessageLabel("File upload unsuccess!"), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, setJOptionMessageLabel("Select files to upload!"), "Warning", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_uploadBTNMouseClicked
  
    // Helper method to GET the file extension
    private String getFileExtension(Path filePath) {
        String fileName = filePath.getFileName().toString();
        int lastDotIndex = fileName.lastIndexOf('.');
        if (lastDotIndex > 0 && lastDotIndex < fileName.length() - 1) {
            return fileName.substring(lastDotIndex + 1).toLowerCase(); // Return the extension in lowercase
        } else {
            return ""; // Return empty string if no extension found
        }
    }
    
    // Helper method to CHECK the file extension
    private boolean checkFileExtension(String fileExtension) {
        System.out.println("Selected file extension: " + fileExtension);
        return !fileExtension.equals("exe") && !fileExtension.equals("sh") && !fileExtension.equals("bat");
    }
    
    @Override
    public void changeColor(JPanel hover, Color myColor) {
        hover.setBackground(myColor);
    }

    @Override
    public void changeFontColor(JLabel text, Color myColor) {
        text.setForeground(myColor);
    }

    @Override
    public final void loadFonts() {
        panelHeading.setFont(CustomFont.subPanelHeadingFont);
        chooseFileLabel.setFont(CustomFont.formLabelFont);
        fileNameLabel.setFont(CustomFont.formLabelFont);
        unsupportedMessageLabel.setFont(CustomFont
                .createFont("/Fonts/SFPRODISPLAYMEDIUM.OTF", 13));
    }
    
    private void loadIcons() {
        try{
            chooseFileLabel.setIcon(
            new ImageIcon(ImageIO.read(
                getClass().getResource("/Icons/upload-icon.png"))));
            
            fileNameLabel.setIcon(
            new ImageIcon(ImageIO.read(
                getClass().getResource("/Icons/file-icon.png"))));
            
        }catch (IOException e) {
            System.err.println(e.getMessage());
        }
        
    }
    
    private String createFileId() {
        return this.newFileId = "file-" + UUID.randomUUID().toString();
    }
    
    private List<FileModel> createFileObjs() {
        String createdDateTime = formatter.format(new Date());
        for(Path file : newFiles) {
            try {
                String fileSize = Double.toString(Files.size(file)/ (1024.0 * 1024.0)) + " MB";
                FileModel obj = new FileModel(createFileId(), file.getFileName().toString(), createdDateTime, Home.user, fileSize);
                obj.setFileDataArray(Files.readAllBytes(file));
                fileObjs.add(obj);
            } catch (IOException ex) {
                System.err.println(ex.getMessage());
            }
        }
        return fileObjs;
    }
    
    private long getAllFileSize() {
        long totalFileSize = 0;
        for(Path file : newFiles) {
            try {
                totalFileSize += Files.size(file);
            } catch (IOException ex) {
                System.err.println(ex.getMessage());
            }
        }
        return totalFileSize / (1024 * 1024); //Returning the file size in MB
    }
    
    private void triggerProgressIndicator(long fileSize) {
        SwingUtilities.invokeLater(() -> {
            // Create a JProgressBar
            JProgressBar progressBar = new JProgressBar(0, 100);
            progressBar.setStringPainted(true);  // Show progress percentage
            progressBar.setIndeterminate(false); // Determinate progress bar

            // Create an option pane with the progress bar
            Object[] dialogContent = {setJOptionMessageLabel("File deleting, please wait..."), progressBar}; 
            JOptionPane optionPane = new JOptionPane(dialogContent, JOptionPane.INFORMATION_MESSAGE, 
                                                      JOptionPane.DEFAULT_OPTION, null, new Object[]{}, null);

            // Create and show the dialog containing the option pane
            JDialog dialog = optionPane.createDialog("Progress");
            dialog.setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE); // Prevent closing during operation
            dialog.setModal(true);

            // Start a background thread to simulate progress
            new Thread(() -> {
                for (int i = 0; i <= 100; i++) {
                    try {
                        Thread.sleep(fileSize * 10); // Simulate work being done
                    } catch (InterruptedException e) {
                        System.err.println(Arrays.toString(e.getStackTrace()));;
                    }
                    progressBar.setValue(i); // Update the progress bar
                }
                dialog.dispose(); // Close the dialog when done
            }).start();

            dialog.setVisible(true); // Show the progress dialog
        });
    }
    
    private JLabel setJOptionMessageLabel(String message) {
        JLabel messageLabel = new JLabel(message);
        messageLabel.setFont(CustomFont.formTextFieldFont); 
        
        return messageLabel;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private View.Resources.RoundPanel cancelBTN;
    private javax.swing.JLabel cancelLabel;
    private javax.swing.JLabel chooseFileLabel;
    private javax.swing.JLabel fileNameLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel44;
    private javax.swing.JPanel jPanel45;
    private javax.swing.JPanel jPanel46;
    private javax.swing.JPanel jPanel47;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel panelHeading;
    private View.Resources.RoundPanel roundPanel10;
    private View.Resources.RoundPanel roundPanel11;
    private View.Resources.RoundPanel roundPanel12;
    private View.Resources.RoundPanel roundPanel14;
    private View.Resources.RoundPanel roundPanel15;
    private View.Resources.RoundPanel roundPanel3;
    private View.Resources.RoundPanel roundPanel4;
    private View.Resources.RoundPanel roundPanel5;
    private View.Resources.RoundPanel roundPanel6;
    private View.Resources.RoundPanel roundPanel7;
    private View.Resources.RoundPanel roundPanel8;
    private View.Resources.RoundPanel roundPanel9;
    private javax.swing.JLabel unsupportedMessageLabel;
    private View.Resources.RoundPanel uploadBTN;
    private javax.swing.JLabel uploadLabel;
    private View.Resources.RoundPanel uploadPanel;
    // End of variables declaration//GEN-END:variables
}
